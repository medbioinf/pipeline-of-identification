// Global default params, used in configs
params {
  // input / output parameters
  outdir = './'
  raw_files = './msms-files/*.raw'
  mzml_files = ''
  fasta = ''
  fasta_target_decoy = ''
  entrapment_fold = 0
  keep_mzmls = true
  tdf2mzml_threads = 8
  decoy_database_threads = 4
  fdrbench_mem_gb = 16

  // search specific parameters
  precursor_tol_ppm = 10
  fragment_tol_da = 0.02
  is_timstof = false
  use_only_rank1_psms = true
  convert_psm_tsv_mem = '60.GB'
  enhance_psm_tsv_mem = '8.GB'

  execute_comet = true
  comet_params_file = "${baseDir}/config/comet.params"
  comet_threads = 16
  comet_mem = '8.GB'
  comet_psm_id_pattern = '(.*)'
  comet_spectrum_id_pattern = '.*scan=(\\d+)$'
  comet_scan_id_pattern = '^(?P<scan_id>\\d+)$'

  execute_maxquant = true
  maxquant_params_file = "${baseDir}/config/mqpar.xml"
  maxquant_threads = 4
  maxquant_mem = "32.GB"
  maxquant_psm_id_pattern = ""
  maxquant_spectrum_id_pattern = ""
  maxquant_scan_id_pattern = ""

  execute_msamanda = true
  msamanda_config_file = "${baseDir}/config/msamanda_settings.xml"
  msamanda_threads = 16
  msamanda_mem = '64.GB'
  msamanda_psm_id_pattern = '(.*)'
  msamanda_spectrum_id_pattern = '(.*)'
  msamanda_scan_id_pattern = '.*scan=(?P<scan_id>\\d+)$'

  execute_msfragger = true
  msfragger_config_file = "${baseDir}/config/closed_fragger.params"
  msfragger_threads = 16
  msfragger_mem_gb = 16
  msfragger_db_split = 0
  msfragger_calibrate = 2
  msfragger_psm_id_pattern = '(.*)'
  msfragger_spectrum_id_pattern = '(.*)'
  msfragger_scan_id_pattern = '.*scan=(?P<scan_id>\\d+)$'

  execute_msgfplus = true
  msgfplus_params_file = "${baseDir}/config/MSGFPlus_Params.txt"
  msgfplus_threads = 6
  msgfplus_mem_gb = 16
  msgfplus_tasks = 0
  msgfplus_instrument = 1 // 0: Low-res LCQ/LTQ, 1: Orbitrap/FTICR/Lumos, 2: TOF, 3: Q-Exactive
  msgfplus_split_input = 10000     // split input mzMLs into chunks of this size, 0 to disable
  msgfplus_merge_mem_gb = 16       // memory for merging PSMs, used in merge_psms process
  msgfplus_split_fasta = 0         // split the fasta into this many chunks, 0 to disable
  msgfplus_psm_id_pattern = '(.*)'
  msgfplus_spectrum_id_pattern = '(.*)'
  msgfplus_scan_id_pattern = '.*scan=(?P<scan_id>\\d+)$'

  execute_sage = true
  sage_config_file = "${baseDir}/config/sage_config.json"
  sage_threads = 16
  sage_mem = '128.GB'
  sage_prefilter = 'false'
  sage_prefilter_chunk_size = 0
  sage_psm_id_pattern = '(.*)'
  sage_spectrum_id_pattern = '(.*)'
  sage_scan_id_pattern = '.*scan=(?P<scan_id>\\d+)$'

  execute_xtandem = true
  xtandem_config_file = "${baseDir}/config/xtandem_input.xml"  
  xtandem_threads = 16
  xtandem_mem = '128.GB'
  xtandem_psm_id_pattern = '(.*)'
  xtandem_spectrum_id_pattern = '(.*)'
  xtandem_scan_id_pattern = '.*scan=(?P<scan_id>\\d+)$'

  // parameters for ms2rescore
  ms2rescore_threads = 4
  ms2rescore_mem = '64.GB'
  ms2rescore_model = 'HCD'
  ms2rescore_chunk_size = 100000
  ms2pip_model_dir = './ms2pip-model'

  // parameters for oktoberfest
  oktoberfest_memory = '64.GB'
  oktoberfest_to_pin_memory = '4.GB'
  oktoberfest_intensity_model = 'Prosit_2020_intensity_HCD'
  oktoberfest_irt_model = 'Prosit_2019_irt'
  oktoberfest_forks = 1 // have some mercy with the koina servers

  // number of threads used by percolator
  percolator_threads = 4
  percolator_mem = '4.GB'

}

manifest {
  name = 'mpc-bioinformatics/McQuaC'
  contributors = [
    [
      name: 'Julian Uszkoreit',
      affiliation: 'Ruhr University Bochum, Medical Bioinformatics',
      github: '@julianu',
      contribution: ['author', 'maintainer', 'contributor'],
      orcid: '0000-0001-7522-4007',
    ],
    [
      name: 'Dirk Winkelhardt',
      affiliation: 'Ruhr University Bochum, Medical Bioinformatics',
      github: '@di-hardt',
      contribution: ['author', 'maintainer', 'contributor'],
      orcid: '0000-0001-8770-2221',
    ],
  ]
  homePage = 'https://github.com/medbioinf/pipeline-of-identification'
  description = """A pipeline for the identification of peptides from mass spectrometry data, integrating multiple search engines and post-processing tools."""
  mainScript = 'main.nf'
  defaultBranch = 'main'
  nextflowVersion = '!>=24.10.6'
  version = '0.1.0'
}

profiles {
  docker {
    docker.enabled = true
    docker.runOptions = "--user=root"
    docker.fixOwnership = true

    process {
      withLabel: python_image {
        container = 'ghcr.io/medbioinf/pipeline-of-identification:latest'
      }

      withLabel: comet_image {
        container = 'quay.io/medbioinf/comet-ms:v2024.01.0'
      }

      withLabel: maxquant_image {
        container = 'quay.io/medbioinf/maxquant:2.6.3.0'
      }

      withLabel: msamanda_image {
        container = 'quay.io/medbioinf/msamanda:3.0.22.071'
      }

      withLabel: msfragger_image {
        container = 'medbioinf/msfragger'
      }

      withLabel: msgfplus_image {
        container = 'quay.io/medbioinf/msgfplus:v2024.03.26'
      }

      withLabel: mzidmerger_image {
        container = 'quay.io/medbioinf/mzid-merger:1.4.26'
      }

      withLabel: sage_image {
        container = 'quay.io/medbioinf/sage:v0.15.0-beta.1'
      }

      withLabel: xtandem_image {
        container = 'quay.io/medbioinf/xtandem:2017.2.1.4'
      }

      withLabel: percolator_image {
        container = 'ghcr.io/percolator/percolator:branch-3-08'
      }

      withLabel: msconvert_image {
        container = 'proteowizard/pwiz-skyline-i-agree-to-the-vendor-licenses:3.0.25073-842baef'
      }

      withLabel: tdf2mzml_image {
        container = 'quay.io/medbioinf/tdf2mzml:0.4'
      }

      withLabel: oktoberfest_image {
        container = 'medbioinf/oktoberfest'
      }

      withLabel: openms_image {
        container = 'quay.io/medbioinf/openms:3.4.1'
      }

      withLabel: fdrbench_image {
        container = 'quay.io/medbioinf/fdrbench-nightly:146f77'
      }
    }
  }
}

plugins {
  id 'nf-schema@2.5.0'
}
